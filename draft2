package com.rysgalbank.RysgalPay;

import android.app.PendingIntent;
import android.appwidget.AppWidgetManager;
import android.appwidget.AppWidgetProvider;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.util.Log;
import android.view.View;
import android.widget.LinearLayout;
import android.widget.RemoteViews;
import android.widget.TextView;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.Timer;
import java.util.TimerTask;

import static android.appwidget.AppWidgetManager.ACTION_APPWIDGET_UPDATE;


public class RysqalAppWidgetProvider extends AppWidgetProvider {

  static void updateAppWidget(Context context, AppWidgetManager appWidgetManager, int appWidgetId) {


    RemoteViews views = new RemoteViews(context.getPackageName(), R.layout.rysqal_widget);
    views.setTextViewText(R.id.widget_horizontal_cards_info, String.valueOf(appWidgetId));

    Intent intentUpdate = new Intent(context, RysqalAppWidgetProvider.class);
    intentUpdate.setAction(AppWidgetManager.ACTION_APPWIDGET_UPDATE);

    int[] idArray = new int[]{appWidgetId};
    intentUpdate.putExtra(AppWidgetManager.EXTRA_APPWIDGET_IDS, idArray);

    appWidgetManager.updateAppWidget(appWidgetId, views);
  }

  @Override
  public void onReceive(Context context, Intent intent) {
    super.onReceive(context, intent);//add this line

    if (intent.getAction() == "qr") {
      Log.d("onreceive", "^^^^^^^^^^^^^^^^^ QR");

      File file = new File(context.getFilesDir().getPath() + "/qr.txt");
      if (!file.exists()) {
        try {
          file.createNewFile();
          Log.d("onCreateFile","file created");
        } catch (IOException e) {
          e.printStackTrace();
        }
      }

      Intent intent1 = new Intent(context, MainActivity.class);
      intent1.setAction("qr");
      intent1.putExtra("DataFromWidget", "qr");
      intent1.setData(Uri.parse("http://qr"));
      intent1.setFlags (Intent.FLAG_ACTIVITY_NEW_TASK);
      context.startActivity(intent1);

    }

    if (intent.getAction() == "scan") {
      Log.d("onreceive", "^^^^^^^^^^^^^^^^^ SCAN");

      File file = new File(context.getFilesDir().getPath() + "/scan.txt");
      if (!file.exists()) {
        try {
          file.createNewFile();
          Log.d("onCreateFile","file created");
        } catch (IOException e) {
          e.printStackTrace();
        }
      }

      Intent intent1 = new Intent(context, MainActivity.class);
      intent1.setAction("scan");
      intent1.putExtra("DataFromWidget", "scan");
      intent1.setData(Uri.parse("http://scan"));
      intent1.setFlags (Intent.FLAG_ACTIVITY_NEW_TASK);
      context.startActivity(intent1);
    }

    if (intent.getAction() == "index") {
      Log.d("onreceive", "^^^^^^^^^^^^^^^^^ INDEX");

      File file = new File(context.getFilesDir().getPath() + "/index.txt");
      if (!file.exists()) {
        try {
          file.createNewFile();
          Log.d("onCreateFile","file created");
        } catch (IOException e) {
          e.printStackTrace();
        }
      }

      Intent intent1 = new Intent(context, MainActivity.class);
      intent1.setAction("index");
      intent1.putExtra("DataFromWidget", "index");
      intent1.setData(Uri.parse("http://index"));
      intent1.setFlags (Intent.FLAG_ACTIVITY_NEW_TASK);
      context.startActivity(intent1);

    }

    String WidgetConfigText = readFromFile(context);

    final String[] ActiveUserID = {""};
    final String[] ActiveUserAccountID = {""};
    final String[] SessionToken = {""};
    final String[] UserType = {""};
    final String[] ShowBalance = {""};
    final String[] WidgetStyle = {""};

    Timer timer = new Timer();
    timer.schedule(new TimerTask() {
      @Override
      public void run() {
        System.out.println("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
        Log.d("TAG", "run: " + WidgetConfigText);
        if (!WidgetConfigText.equals("")){
          Log.d( "Widget","!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
          Log.d("Widget", "onUpdate: " + WidgetConfigText);

          try {
            JSONObject jsonObj = new JSONObject(WidgetConfigText);
            ActiveUserID[0] = jsonObj.getString("UserId");
            ActiveUserAccountID[0] = jsonObj.getString("UserAccountId");
            SessionToken[0] = jsonObj.getString("Token");
            UserType[0] = jsonObj.getString("UserType");
            ShowBalance[0] = jsonObj.getString("ShowBalance");
            WidgetStyle[0] = jsonObj.getString("WidgetStyle");
          } catch (JSONException e) {
            e.printStackTrace();
          }
          Log.d("Widget", "onUpdate: Active user ID" + ActiveUserID[0]);
          Log.d("Widget", "onUpdate: Active user account ID" + ActiveUserAccountID[0]);
          Log.d("Widget", "onUpdate: Session Token" + SessionToken[0]);
          Log.d("Widget", "onUpdate: User Type" + UserType[0]);
          Log.d("Widget", "onUpdate: Show Balance" + ShowBalance[0]);
          Log.d("Widget", "onUpdate: Widget Style" + WidgetStyle[0]);

          ComponentName thisWidget = new ComponentName(context, RysqalAppWidgetProvider.class);
          RemoteViews views = new RemoteViews(context.getPackageName(), R.layout.rysqal_widget);

          views.setTextViewText(R.id.widget_horizontal_cards_info, UserType[0]);
//          views.setClickable(false);
//          views.setViewVisibility(R.id.rysqal_widget_button, View.INVISIBLE);
//
//            LinearLayout myLayout = (LinearLayout) myLayout.findViewById(R.id.rysqal_widget_button);
//            for ( int i = 0; i < myLayout.getChildCount();  i++ ){
//              View view = myLayout.getChildAt(i);
//              view.setEnabled(false); // Or whatever you want to do with the view.
//            }

          (AppWidgetManager.getInstance(context)).updateAppWidget( thisWidget, views );
        }
      }
    }, 0 , 5000);

//    if (ACTION_APPWIDGET_UPDATE.equals(intent.getAction())) {
//      // Update your widget here.
//
//
//    }

//    if (!WidgetConfigText.equals("")){
//      Log.d( "Widget","!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
//      Log.d("Widget", "onUpdate: " + WidgetConfigText);
//      String ActiveUserID = "";
//      String ActiveUserAccountID = "";
//      String SessionToken = "";
//      String UserType = "";
//      String ShowBalance = "";
//      String WidgetStyle = "";
//
//      try {
//        JSONObject jsonObj = new JSONObject(WidgetConfigText);
//        ActiveUserID = jsonObj.getString("UserId");
//        ActiveUserAccountID = jsonObj.getString("UserAccountId");
//        SessionToken = jsonObj.getString("Token");
//        UserType = jsonObj.getString("UserType");
//        ShowBalance = jsonObj.getString("ShowBalance");
//        WidgetStyle = jsonObj.getString("WidgetStyle");
//        Log.d("Widget", "onUpdate: Active user ID" + ActiveUserID);
//        Log.d("Widget", "onUpdate: Active user account ID" + ActiveUserAccountID);
//        Log.d("Widget", "onUpdate: Session Token" + SessionToken);
//        Log.d("Widget", "onUpdate: User Type" + UserType);
//        Log.d("Widget", "onUpdate: Show Balance" + ShowBalance);
//        Log.d("Widget", "onUpdate: Widget Style" + WidgetStyle);
//      } catch (JSONException e) {
//        e.printStackTrace();
//      }
//      RemoteViews views = new RemoteViews(context.getPackageName(), R.layout.rysqal_widget);
//      views.setTextViewText(R.id.widget_horizontal_cards_info, ActiveUserAccountID);
//    }


//    LinearLayout myLayout = (LinearLayout) findViewById(R.id.rysqal_widget_button);
//    for ( int i = 0; i < myLayout.getChildCount();  i++ ){
//      View view = myLayout.getChildAt(i);
//      view.setEnabled(false); // Or whatever you want to do with the view.
//    }
  }

  @Override
  public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] appWidgetIds){

    ComponentName thisWidget = new ComponentName(context, RysqalAppWidgetProvider.class);
    RemoteViews views = new RemoteViews(context.getPackageName(), R.layout.rysqal_widget);

    Intent intent = new Intent(context, getClass());
    intent.setAction("qr");
    intent.putExtra("DataFromWidget", "qr");
    intent.setData(Uri.parse("http://qr"));
    PendingIntent pendingIntent = PendingIntent.getBroadcast(context, 0, intent, PendingIntent.FLAG_UPDATE_CURRENT);
    views.setOnClickPendingIntent(R.id.QRCode_widget_button, pendingIntent);


    Intent intent1 = new Intent(context, getClass());
    intent1.setAction("scan");
    intent1.putExtra("DataFromWidget", "scan");
    intent1.setData(Uri.parse("http://scan"));
    PendingIntent pendingIntent1 = PendingIntent.getBroadcast(context, 0, intent1, PendingIntent.FLAG_UPDATE_CURRENT);
    views.setOnClickPendingIntent(R.id.QRCodeScanner_widget_button, pendingIntent1);

    Intent intent2 = new Intent(context, getClass());
    intent2.setAction("index");
    intent2.putExtra("DataFromWidget", "index");
    intent2.setData(Uri.parse("http://index"));
    PendingIntent pendingIntent2 = PendingIntent.getBroadcast(context, 0, intent2, PendingIntent.FLAG_UPDATE_CURRENT);
    views.setOnClickPendingIntent(R.id.rysqal_widget_button, pendingIntent2);

    appWidgetManager.updateAppWidget(thisWidget, views);

    for (int appWidgetId : appWidgetIds) {
      updateAppWidget(context, appWidgetManager, appWidgetId);
    }
  }

  public String readFromFile(Context context) {

    String ret = "";

    try {
      InputStream inputStream = context.openFileInput("Config.txt");

      if (inputStream != null) {
        InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
        BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
        String receiveString = "";
        StringBuilder stringBuilder = new StringBuilder();

        while ((receiveString = bufferedReader.readLine()) != null) {
          stringBuilder.append(receiveString);
        }

        inputStream.close();
        ret = stringBuilder.toString();

        JSONObject jsonObj = new JSONObject(ret);

        Log.d("widget activity", "Founded file: " + jsonObj);
      }
    } catch (FileNotFoundException e) {
      Log.e("widget activity", "File not found: " + e.toString());
    } catch (IOException e) {
      Log.e("widget activity", "Can not read file: " + e.toString());
    } catch (JSONException e) {
      Log.e("widget activity", "JSON error: " + e.toString());
    }

    return ret;
  }

}
